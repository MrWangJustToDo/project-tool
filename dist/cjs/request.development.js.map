{"version":3,"file":"request.development.js","sources":["../../packages/axios/adapter/error.ts","../../packages/axios/adapter/fetch.ts","../../packages/axios/adapter/fetchAdapter.ts","../../packages/axios/env.ts","../../packages/axios/Interceptor.ts","../../packages/axios/createRequest.ts"],"sourcesContent":["export class FetchTimeOutError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n","import { FetchTimeOutError } from \"./error\";\n\nexport const generateFetchWithTimeout = (timeout?: number) => {\n  return async (...props: Parameters<typeof fetch>) => {\n    const abort = new AbortController();\n\n    const request = () => fetch(props[0], { ...props[1], signal: abort.signal });\n\n    setTimeout(() => abort.abort(`[fetch] ${timeout} ms timeout to fetch`), timeout);\n\n    return await request();\n  };\n};\n","/* eslint-disable @typescript-eslint/no-var-requires */\n// SEE https://github.com/vespaiach/axios-fetch-adapter/blob/main/index.js\n\nimport { AxiosError } from \"axios\";\n\nimport { FetchTimeOutError } from \"./error\";\nimport { generateFetchWithTimeout } from \"./fetch\";\n\nimport type { AxiosPromise, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nconst buildFullPath = require(\"axios/lib/core/buildFullPath\");\nconst settle = require(\"axios/lib/core/settle\");\nconst defaults = require(\"axios/lib/defaults\");\nconst buildURL = require(\"axios/lib/helpers/buildURL\");\nconst { isUndefined } = require(\"axios/lib/utils\");\n\nexport async function fetchAdapter(config: AxiosRequestConfig): Promise<AxiosResponse<unknown>> {\n  let request: Request | null = null;\n  try {\n    request = createRequest(config);\n  } catch (err) {\n    if (__DEV__) {\n      console.error(`[axios] fetch adapter create error, ${(err as Error).message}`);\n    }\n    return defaults.adapter(config) as AxiosPromise;\n  }\n\n  const fetchPromise = getResponse(request, config);\n\n  const data = await fetchPromise;\n\n  return new Promise((resolve, reject) => {\n    if (data instanceof Error) {\n      reject(data);\n    } else {\n      settle(resolve, reject, data);\n    }\n  });\n}\n\n/**\n * Fetch API stage two is to get response body. This function tries to retrieve\n * response body based on response's type\n */\nasync function getResponse(request: Request, config: AxiosRequestConfig): Promise<AxiosResponse | AxiosError> {\n  let stageOne: Response;\n\n  const fetch = generateFetchWithTimeout(config.timeout);\n\n  try {\n    stageOne = await fetch(request);\n  } catch (e) {\n    if (e instanceof FetchTimeOutError) {\n      return new AxiosError(e.message, AxiosError[\"ETIMEDOUT\"], config, request);\n    }\n    return new AxiosError((e as Error)?.message, AxiosError[\"ERR_NETWORK\"], config, request);\n  }\n\n  const fetchHeaders = new Headers(stageOne.headers);\n\n  const axiosHeaders: Record<string, string> = {};\n\n  fetchHeaders.forEach((v, k) => {\n    axiosHeaders[k] = v;\n  });\n\n  const response: AxiosResponse = {\n    status: stageOne.status,\n    statusText: stageOne.statusText,\n    headers: axiosHeaders,\n    config: config,\n    request,\n    data: null,\n  };\n\n  let data;\n\n  try {\n    if (stageOne.status >= 200 && stageOne.status !== 204) {\n      switch (config.responseType as AxiosRequestConfig[\"responseType\"]) {\n        case \"arraybuffer\":\n          data = await stageOne.arrayBuffer();\n          break;\n        case \"blob\":\n          data = await stageOne.blob();\n          break;\n        case \"json\":\n          data = await stageOne.json();\n          break;\n        default:\n          data = await stageOne.text();\n          break;\n      }\n    }\n  } catch (e) {\n    return new AxiosError((e as Error).message, AxiosError[\"ERR_BAD_RESPONSE\"], config, request, response);\n  }\n\n  response.data = data;\n\n  return response;\n}\n\n/**\n * This function will create a Request object based on configuration's axios\n */\nfunction createRequest(config: AxiosRequestConfig): Request {\n  if (typeof fetch === \"undefined\") {\n    throw new Error(\"[axios] current env not have fetch function\");\n  }\n\n  const headers = new Headers();\n\n  const { headers: axiosHeaders } = config;\n\n  if (axiosHeaders) {\n    Object.keys(axiosHeaders).forEach((key) => {\n      headers.set(key, axiosHeaders[key]?.toString() || \"\");\n    });\n  }\n\n  // HTTP basic authentication\n  if (config.auth) {\n    const username = config.auth.username || \"\";\n    const password = config.auth.password ? decodeURI(encodeURIComponent(config.auth.password)) : \"\";\n    headers.set(\"Authorization\", `Basic ${btoa(username + \":\" + password)}`);\n  }\n\n  const method = config.method?.toUpperCase() || \"GET\";\n\n  const options: RequestInit = {\n    headers: headers,\n    method,\n  };\n\n  if (method !== \"GET\" && method !== \"HEAD\") {\n    options.body = config.data;\n  }\n\n  const fetchInternalProperties = [\"mode\", \"cache\", \"integrity\", \"redirect\", \"referrer\"];\n\n  fetchInternalProperties.forEach((property) => {\n    if (Object.prototype.hasOwnProperty.call(config, property)) {\n      Object.assign(options, { [property]: property });\n    }\n  });\n\n  // This config is similar to XHRâ€™s withCredentials flag, but with three available values instead of two.\n  // So if withCredentials is not set, default value 'same-origin' will be used\n  if (!isUndefined(config.withCredentials)) {\n    options.credentials = config.withCredentials ? \"include\" : \"omit\";\n  }\n\n  const fullPath = buildFullPath(config.baseURL, config.url);\n  const url = buildURL(fullPath, config.params, config.paramsSerializer);\n\n  // Expected browser to throw error if there is any wrong configuration value\n  return new Request(url, options);\n}\n","export const __SERVER__ = typeof window === \"undefined\";\n","import { AxiosError } from \"axios\";\n\nimport { __SERVER__ } from \"./env\";\n\nexport const serverLog = (error: AxiosError | Error | unknown) => {\n  if (__SERVER__ || __DEV__) {\n    if (error instanceof AxiosError) {\n      const { config, status } = error;\n      console.error(`[axios]: request error, url: ${config?.baseURL}${config?.url}, statusCode: ${status}, error: ${error.message}`);\n    } else if (error instanceof Error) {\n      console.error(`[axios]: request error, message: ${error.message}`);\n    } else {\n      console.error(`[axios]: request error`);\n    }\n  }\n  throw error;\n};\n","import axios from \"axios\";\n\nimport { fetchAdapter } from \"./adapter\";\nimport { serverLog } from \"./Interceptor\";\n\nimport type { BaseCreateOptions, RequestInterceptor, ResponseInterceptor } from \"./type\";\n\nconst BASE_TIME_OUT = 3000;\n\nconst BASE_REQUEST_INTERCEPTORS: RequestInterceptor = [];\n\nconst BASE_RESPONSE_INTERCEPTORS: ResponseInterceptor = [[undefined, serverLog]];\n\nfunction createRequest({\n  method = \"get\",\n  timeout = BASE_TIME_OUT,\n  requestInterceptors = [],\n  responseInterceptors = [],\n  ...axiosConfig\n}: BaseCreateOptions = {}) {\n  const axiosInstance = axios.create({\n    method,\n    timeout,\n    adapter: fetchAdapter,\n    ...axiosConfig,\n  });\n\n  const finalRequestInterceptors = BASE_REQUEST_INTERCEPTORS.concat(requestInterceptors);\n\n  const finalResponseInterceptors = BASE_RESPONSE_INTERCEPTORS.concat(responseInterceptors);\n\n  finalRequestInterceptors.forEach((interceptor) => axiosInstance.interceptors.request.use(...interceptor));\n\n  finalResponseInterceptors.forEach((interceptor) => axiosInstance.interceptors.response.use(...interceptor));\n\n  return axiosInstance;\n}\n\nexport { createRequest };\n"],"names":["createRequest","AxiosError"],"mappings":"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"}