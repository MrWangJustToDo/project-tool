{"version":3,"file":"index.js","sources":["../../src/log.ts","../../src/safeParse.ts","../../src/rollupConfig.ts","../../src/rollupBuild.ts","../../src/rollupWatch.ts"],"sourcesContent":["import { pino } from \"pino\";\nimport pretty from \"pino-pretty\";\n\nexport const logger = () => pino(pretty());","export const safeParse = (str: string) => {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    throw new Error(`parse error, ${(e as Error).message}`);\n  }\n};\n","import commonjs from \"@rollup/plugin-commonjs\";\nimport { nodeResolve } from \"@rollup/plugin-node-resolve\";\nimport replace from \"@rollup/plugin-replace\";\nimport terser from \"@rollup/plugin-terser\";\nimport fs from \"fs\";\nimport { readFile, access } from \"fs/promises\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { resolve } from \"path\";\nimport typescript from \"rollup-plugin-typescript2\";\n\nimport { safeParse } from \"./safeParse\";\n\nimport type { Mode, MultipleOutput, Options, RollupOptions } from \"./type\";\n\nconst defaultBuildOptions: RollupOptions = {\n  input: \"./src/index.ts\",\n  output: [\n    {\n      dir: \"./dist\",\n      entryFileNames: \"cjs/index.js\",\n      format: \"cjs\",\n      sourcemap: true,\n    },\n    {\n      dir: \"./dist\",\n      entryFileNames: \"esm/index.js\",\n      format: \"esm\",\n      sourcemap: true,\n    },\n  ],\n};\n\nconst checkFileExist = (path: string) => {\n  return access(path, fs.constants.F_OK)\n    .then(() => true)\n    .catch(() => false);\n};\n\nconst tsConfig = (absolutePath: string, mode: Mode, type?: \"type\") => {\n  return typescript({\n    clean: true,\n    tsconfig: resolve(absolutePath, \"tsconfig.json\"),\n    useTsconfigDeclarationDir: type === \"type\" ? true : false,\n    tsconfigOverride: {\n      compilerOptions: {\n        composite: type === \"type\" ? true : false,\n        sourceMap: (mode === \"process.env\" || mode === \"development\") && type !== \"type\" ? true : false,\n        declaration: type === \"type\" ? true : false,\n        declarationMap: type === \"type\" ? true : false,\n        declarationDir: type === \"type\" ? \"dist/types\" : null,\n        noEmit: type === \"type\",\n      },\n    },\n  });\n};\n\nconst transformMultipleBuildConfig = (\n  options: RollupOptions,\n  packageFileObject: Record<string, any>,\n  absolutePath: string,\n  mode: Mode,\n  configOption: Options\n): {\n  multipleOther?: RollupOptions;\n  multipleUMD?: RollupOptions;\n} => {\n  const allOptions: {\n    multipleOther?: RollupOptions;\n    multipleUMD?: RollupOptions;\n  } = {};\n  if (typeof options.input === \"string\" && !options.input.startsWith(absolutePath)) {\n    options.input = resolve(absolutePath, options.input);\n  }\n  if (options.output) {\n    options.output = Array.isArray(options.output) ? options.output : [options.output];\n    const multipleOutput = options.output.filter((output: MultipleOutput) => output.multiple);\n\n    const umdGlobalIgnore: string[] = [];\n\n    options.output = multipleOutput.map((output: MultipleOutput) => {\n      if (output.dir && !output.dir.startsWith(absolutePath)) {\n        output.dir = resolve(absolutePath, output.dir);\n        if (configOption.multipleNameTransform) {\n          output.entryFileNames = configOption.multipleNameTransform(output.entryFileNames as string, mode);\n        } else {\n          const typedEntryFileNames = output.entryFileNames as string;\n          const lastIndexofDote = typedEntryFileNames.lastIndexOf(\".\");\n          output.entryFileNames = `${typedEntryFileNames.slice(0, lastIndexofDote)}.${mode}${typedEntryFileNames.slice(lastIndexofDote)}`;\n        }\n        delete output.multiple;\n      }\n      if (output.file && !output.file.startsWith(absolutePath)) {\n        output.file = resolve(absolutePath, output.file);\n        if (configOption.multipleNameTransform) {\n          output.file = configOption.multipleNameTransform(output.file, mode);\n        } else {\n          const typedEntryFileNames = output.file as string;\n          const lastIndexofDote = typedEntryFileNames.lastIndexOf(\".\");\n          output.file = `${typedEntryFileNames.slice(0, lastIndexofDote)}.${mode}${typedEntryFileNames.slice(lastIndexofDote)}`;\n        }\n        delete output.multiple;\n      }\n      return output;\n    });\n\n    const multipleOtherConfig = options.output.filter((output) => output.format !== \"umd\");\n    const multipleUMDConfig = options.output.filter((output) => output.format === \"umd\");\n\n    multipleUMDConfig.forEach((output) => {\n      if (output.globals) {\n        const allGlobal = Object.keys(output.globals);\n        umdGlobalIgnore.push(...allGlobal);\n      }\n    });\n\n    options.onwarn = (msg, warn) => {\n      if (!/Circular/.test(msg.message)) {\n        warn(msg);\n      }\n    };\n\n    if (multipleOtherConfig.length) {\n      allOptions.multipleOther = {\n        ...options,\n        output: multipleOtherConfig,\n        external: configOption.external || ((id) => id.includes(\"node_modules\")),\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                  __DEV__: mode === \"development\",\n                  __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                  preventAssignment: true,\n                }\n          ),\n          tsConfig(absolutePath, mode),\n        ],\n      };\n    }\n\n    if (multipleUMDConfig.length) {\n      allOptions.multipleUMD = {\n        ...options,\n        output: multipleUMDConfig,\n        external: (id) => {\n          if (umdGlobalIgnore.some((name) => id.endsWith(name))) return true;\n        },\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                  __DEV__: mode === \"development\",\n                  [\"process.env.NODE_ENV\"]: JSON.stringify(mode),\n                  __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                  preventAssignment: true,\n                }\n          ),\n          tsConfig(absolutePath, mode),\n          mode === \"production\" ? terser() : null,\n        ],\n      };\n    }\n  }\n\n  return allOptions;\n};\n\nconst transformSingleBuildConfig = (\n  options: RollupOptions,\n  packageFileObject: Record<string, any>,\n  absolutePath: string,\n  configOption: Options\n): {\n  type?: RollupOptions;\n  singleOther?: RollupOptions;\n  singleUMD?: RollupOptions;\n} => {\n  const allOptions: {\n    type?: RollupOptions;\n    singleOther?: RollupOptions;\n    singleUMD?: RollupOptions;\n  } = {};\n\n  if (typeof options.input === \"string\" && !options.input.startsWith(absolutePath)) {\n    options.input = resolve(absolutePath, options.input);\n  }\n\n  if (options.output) {\n    options.output = Array.isArray(options.output) ? options.output : [options.output];\n    const singleOutput = options.output.filter((output: MultipleOutput) => !output.multiple);\n\n    const umdGlobalIgnore: string[] = [];\n\n    options.output = singleOutput.map((output) => {\n      if (output.dir && !output.dir.startsWith(absolutePath)) {\n        output.dir = resolve(absolutePath, output.dir);\n      }\n      if (output.file && !output.file.startsWith(absolutePath)) {\n        output.file = resolve(absolutePath, output.file);\n      }\n      return output;\n    });\n\n    const singleOther = options.output.filter((output) => output.format !== \"umd\");\n    const singleUMD = options.output.filter((output) => output.format === \"umd\");\n\n    singleUMD.forEach((output) => {\n      if (output.globals) {\n        const allGlobal = Object.keys(output.globals);\n        umdGlobalIgnore.push(...allGlobal);\n      }\n    });\n\n    options.onwarn = (msg, warn) => {\n      if (!/Circular/.test(msg.message)) {\n        warn(msg);\n      }\n    };\n\n    allOptions.type = {\n      ...options,\n      output: singleOther,\n      external: configOption.external || ((id) => id.includes(\"node_modules\")),\n      plugins: [\n        nodeResolve(),\n        commonjs({ exclude: \"node_modules\" }),\n        replace(\n          packageFileObject[\"name\"] === \"@project-tool/rollup\"\n            ? {}\n            : {\n                __DEV__: 'process.env.NODE_ENV === \"development\"',\n                __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                preventAssignment: true,\n              }\n        ),\n        tsConfig(absolutePath, \"process.env\", \"type\"),\n      ],\n    };\n\n    if (singleOther.length) {\n      allOptions.singleOther = {\n        ...options,\n        output: singleOther,\n        external: configOption.external || ((id) => id.includes(\"node_modules\")),\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                  __DEV__: 'process.env.NODE_ENV === \"development\"',\n                  __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                  preventAssignment: true,\n                }\n          ),\n          tsConfig(absolutePath, \"process.env\"),\n        ],\n      };\n    }\n\n    if (singleUMD.length) {\n      allOptions.singleUMD = {\n        ...options,\n        output: singleUMD,\n        external: (id) => {\n          if (umdGlobalIgnore.some((name) => id.endsWith(name))) return true;\n        },\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                  __DEV__: JSON.stringify(true),\n                  __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                  preventAssignment: true,\n                }\n          ),\n          tsConfig(absolutePath, \"process.env\"),\n        ],\n      };\n    }\n  }\n\n  return allOptions;\n};\n\nconst flattenRollupConfig = (\n  rollupConfig: RollupOptions,\n  packageName: string,\n  packageFileObject: Record<string, any>,\n  absolutePath: string,\n  options: Options\n) => {\n  const modes: Mode[] = [\"development\", \"production\"];\n\n  if (!rollupConfig.input) {\n    throw new Error(`current package \"${packageName}\" not have a input config`);\n  }\n\n  if (!rollupConfig.output) {\n    throw new Error(`current package \"${packageName}\" not have a output config`);\n  }\n\n  const allMultipleRollupOptions = modes.map((mode) => transformMultipleBuildConfig(cloneDeep(rollupConfig), packageFileObject, absolutePath, mode, options));\n\n  const allSingleRollupOptions = transformSingleBuildConfig(cloneDeep(rollupConfig), packageFileObject, absolutePath, options);\n\n  const allDevBuild = allMultipleRollupOptions[0];\n\n  const allProdBuild = allMultipleRollupOptions[1];\n\n  const type = allSingleRollupOptions[\"type\"];\n\n  const singleOther = allSingleRollupOptions[\"singleOther\"];\n\n  const singleDevUMD = allSingleRollupOptions[\"singleUMD\"];\n\n  const multipleDevOther = allDevBuild[\"multipleOther\"];\n\n  const multipleDevUMD = allDevBuild[\"multipleUMD\"];\n\n  const multipleProdOther = allProdBuild[\"multipleOther\"];\n\n  const multipleProdUMD = allProdBuild[\"multipleUMD\"];\n\n  return {\n    type,\n    singleOther,\n    singleDevUMD,\n    multipleDevOther,\n    multipleDevUMD,\n    multipleProdOther,\n    multipleProdUMD,\n  };\n};\n\nfunction filterFun<T>(t?: T): t is T {\n  return t ? true : false;\n}\n\nexport const getRollupConfigs = async (options: Options) => {\n  const packageScope = options.packageScope;\n\n  const packageName = options.packageName;\n\n  const absolutePath = packageScope ? resolve(process.cwd(), packageScope, packageName) : resolve(process.cwd(), packageName);\n\n  const packageFilePath = resolve(absolutePath, \"package.json\");\n\n  const tsconfigFilePath = resolve(absolutePath, \"tsconfig.json\");\n\n  const isPackageFileExist = await checkFileExist(packageFilePath);\n\n  const isTsconfigFileExist = await checkFileExist(tsconfigFilePath);\n\n  if (!isPackageFileExist) {\n    throw new Error(`current package \"${packageName}\" not exist, absolutePath: ${packageFilePath}`);\n  }\n\n  if (!isTsconfigFileExist) {\n    throw new Error(`current package \"${packageName}\" not have a \"tsconfig.json\", absolutePath: ${tsconfigFilePath}`);\n  }\n\n  const packageFileContent = await readFile(packageFilePath, {\n    encoding: \"utf-8\",\n  });\n\n  const packageFileObject = safeParse(packageFileContent);\n\n  let rollupConfig: RollupOptions[] = [\n    {\n      ...defaultBuildOptions,\n    },\n  ];\n\n  if (packageFileObject[\"buildOptions\"]) {\n    const typedBuildOptions = packageFileObject[\"buildOptions\"] as RollupOptions | RollupOptions[];\n    rollupConfig = Array.isArray(typedBuildOptions) ? typedBuildOptions : [typedBuildOptions];\n  }\n\n  const all = rollupConfig.map((config) => flattenRollupConfig(config, packageName, packageFileObject, absolutePath, options));\n\n  return {\n    type: all.map((i) => i.type).filter(filterFun),\n    singleOther: all.map((i) => i.singleOther).filter(filterFun),\n    singleDevUMD: all.map((i) => i.singleDevUMD).filter(filterFun),\n    multipleDevOther: all.map((i) => i.multipleDevOther).filter(filterFun),\n    multipleDevUMD: all.map((i) => i.multipleDevUMD).filter(filterFun),\n    multipleProdOther: all.map((i) => i.multipleProdOther).filter(filterFun),\n    multipleProdUMD: all.map((i) => i.multipleProdUMD).filter(filterFun),\n  };\n};\n","import uniq from \"lodash/uniq\";\nimport { rollup } from \"rollup\";\n\nimport { logger } from \"./log\";\nimport { getRollupConfigs } from \"./rollupConfig\";\n\nimport type { Options, Type } from \"./type\";\nimport type { OutputOptions, RollupOptions, RollupBuild } from \"rollup\";\n\nconst build = async (packageName: string, rollupOptions: RollupOptions, mode: string, type: Type) => {\n  logger().info(`[build] start build package '${packageName}' with '${mode}' mode in '${type}' format`);\n  let bundle: RollupBuild | null = null;\n  try {\n    const { output, ...options } = rollupOptions;\n    bundle = await rollup(options);\n    await Promise.all((output as OutputOptions[]).map((output) => bundle?.write(output)));\n  } catch (e) {\n    logger().error(`[build] build package '${packageName}' with '${mode}' mode in '${type}' format failed \\n ${(e as Error).message}`);\n    process.exit(1);\n  } finally {\n    await bundle?.close();\n  }\n  logger().info(`[build] build package '${packageName}' with '${mode}' mode in '${type}' format success`);\n};\n\nexport const rollupBuild = async (options: Options) => {\n  const aliasName = options.alias || options.packageName;\n\n  try {\n    const { singleOther, singleDevUMD, multipleDevOther, multipleDevUMD, multipleProdOther, multipleProdUMD, type } = await getRollupConfigs(options);\n\n    const all: Array<() => void> = [];\n\n    type.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"type\", \"type\"));\n    });\n\n    singleOther.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"process.env\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\")));\n    });\n\n    singleDevUMD.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"development\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\")));\n    });\n\n    multipleDevOther.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"development\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\")));\n    });\n\n    multipleDevUMD.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"development\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\")));\n    });\n\n    multipleProdOther.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"production\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\")));\n    });\n\n    multipleProdUMD.map((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      all.push(() => build(name, config, \"production\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\")));\n    });\n\n    await Promise.all(all.map((f) => f()));\n  } catch (e) {\n    logger().error((e as Error)?.message);\n    process.exit(1);\n  }\n};\n","import uniq from \"lodash/uniq\";\nimport { watch as rollup } from \"rollup\";\n\nimport { logger } from \"./log\";\nimport { getRollupConfigs } from \"./rollupConfig\";\n\nimport type { Type, Options } from \"./type\";\nimport type { RollupOptions, OutputOptions } from \"rollup\";\n\nconst watch = (packageName: string, rollupOptions: RollupOptions, mode: string, type: Type) => {\n  rollupOptions.watch = {\n    buildDelay: 100,\n  };\n\n  const watcher = rollup(rollupOptions);\n\n  watcher.on(\"event\", (event) => {\n    if (event.code === \"BUNDLE_START\") {\n      // look like rollup watch have a bug for some usage\n\n      logger().info(`[watch] start build package '${packageName}' with '${mode}' mode in '${type}' format`);\n    }\n    if (event.code === \"BUNDLE_END\") {\n      if (event.result) event.result.close();\n\n      logger().info(`[watch] package '${packageName}' with '${mode}' mode in '${type}' format build success`);\n    }\n    if (event.code === \"ERROR\") {\n      if (event.result) event.result.close();\n\n      logger().error(`[watch] package '${packageName}' with '${mode}' mode in '${type}' format build failed \\n ${event.error.stack}`);\n    }\n  });\n};\n\nexport const rollupWatch = async (options: Options) => {\n  const aliasName = options.alias || options.packageName;\n\n  try {\n    const { singleOther, multipleDevOther, multipleDevUMD } = await getRollupConfigs(options);\n\n    singleOther.forEach((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      watch(name, config, \"process.env\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\"));\n    });\n\n    multipleDevOther.forEach((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      watch(name, config, \"development\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\"));\n    });\n\n    multipleDevUMD.forEach((config) => {\n      const pkgName = config.pkgName;\n      const name = pkgName ? aliasName + \"/\" + pkgName : aliasName;\n      delete config.pkgName;\n      watch(name, config, \"development\", uniq((config.output as OutputOptions[]).map((v) => v.format)).join(\"&\"));\n    });\n  } catch (e) {\n    logger().error((e as Error)?.message);\n    process.exit(1);\n  }\n};\n"],"names":["rollup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAM,MAAM,GAAG,YAAM,EAAA,OAAA,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA,EAAA;;ACHnC,IAAM,SAAS,GAAG,UAAC,GAAW,EAAA;IACnC,IAAI;AACF,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,KAAA;AAAC,IAAA,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,eAAA,CAAA,MAAA,CAAiB,CAAW,CAAC,OAAO,CAAE,CAAC,CAAC;AACzD,KAAA;AACH,CAAC;;ACQD,IAAM,mBAAmB,GAAkB;AACzC,IAAA,KAAK,EAAE,gBAAgB;AACvB,IAAA,MAAM,EAAE;AACN,QAAA;AACE,YAAA,GAAG,EAAE,QAAQ;AACb,YAAA,cAAc,EAAE,cAAc;AAC9B,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,SAAS,EAAE,IAAI;AAChB,SAAA;AACD,QAAA;AACE,YAAA,GAAG,EAAE,QAAQ;AACb,YAAA,cAAc,EAAE,cAAc;AAC9B,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,SAAS,EAAE,IAAI;AAChB,SAAA;AACF,KAAA;CACF,CAAC;AAEF,IAAM,cAAc,GAAG,UAAC,IAAY,EAAA;IAClC,OAAO,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;AACnC,SAAA,IAAI,CAAC,YAAM,EAAA,OAAA,IAAI,CAAA,EAAA,CAAC;AAChB,SAAA,KAAK,CAAC,YAAM,EAAA,OAAA,KAAK,CAAL,EAAK,CAAC,CAAC;AACxB,CAAC,CAAC;AAEF,IAAM,QAAQ,GAAG,UAAC,YAAoB,EAAE,IAAU,EAAE,IAAa,EAAA;AAC/D,IAAA,OAAO,UAAU,CAAC;AAChB,QAAA,KAAK,EAAE,IAAI;AACX,QAAA,QAAQ,EAAE,OAAO,CAAC,YAAY,EAAE,eAAe,CAAC;QAChD,yBAAyB,EAAE,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;AACzD,QAAA,gBAAgB,EAAE;AAChB,YAAA,eAAe,EAAE;gBACf,SAAS,EAAE,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;gBACzC,SAAS,EAAE,CAAC,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,aAAa,KAAK,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;gBAC/F,WAAW,EAAE,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;gBAC3C,cAAc,EAAE,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;gBAC9C,cAAc,EAAE,IAAI,KAAK,MAAM,GAAG,YAAY,GAAG,IAAI;gBACrD,MAAM,EAAE,IAAI,KAAK,MAAM;AACxB,aAAA;AACF,SAAA;AACF,KAAA,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,IAAM,4BAA4B,GAAG,UACnC,OAAsB,EACtB,iBAAsC,EACtC,YAAoB,EACpB,IAAU,EACV,YAAqB,EAAA;;IAKrB,IAAM,UAAU,GAGZ,EAAE,CAAC;AACP,IAAA,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;QAChF,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AACtD,KAAA;IACD,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnF,QAAA,IAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAsB,EAAA,EAAK,OAAA,MAAM,CAAC,QAAQ,CAAf,EAAe,CAAC,CAAC;QAE1F,IAAM,iBAAe,GAAa,EAAE,CAAC;QAErC,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,UAAC,MAAsB,EAAA;AACzD,YAAA,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;gBACtD,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC/C,IAAI,YAAY,CAAC,qBAAqB,EAAE;AACtC,oBAAA,MAAM,CAAC,cAAc,GAAG,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,cAAwB,EAAE,IAAI,CAAC,CAAC;AACnG,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAM,mBAAmB,GAAG,MAAM,CAAC,cAAwB,CAAC;oBAC5D,IAAM,eAAe,GAAG,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBAC7D,MAAM,CAAC,cAAc,GAAG,EAAA,CAAA,MAAA,CAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,EAAI,GAAA,CAAA,CAAA,MAAA,CAAA,IAAI,SAAG,mBAAmB,CAAC,KAAK,CAAC,eAAe,CAAC,CAAE,CAAC;AACjI,iBAAA;gBACD,OAAO,MAAM,CAAC,QAAQ,CAAC;AACxB,aAAA;AACD,YAAA,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;gBACxD,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,YAAY,CAAC,qBAAqB,EAAE;AACtC,oBAAA,MAAM,CAAC,IAAI,GAAG,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAM,mBAAmB,GAAG,MAAM,CAAC,IAAc,CAAC;oBAClD,IAAM,eAAe,GAAG,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBAC7D,MAAM,CAAC,IAAI,GAAG,EAAA,CAAA,MAAA,CAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,EAAI,GAAA,CAAA,CAAA,MAAA,CAAA,IAAI,SAAG,mBAAmB,CAAC,KAAK,CAAC,eAAe,CAAC,CAAE,CAAC;AACvH,iBAAA;gBACD,OAAO,MAAM,CAAC,QAAQ,CAAC;AACxB,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAC;QAEH,IAAM,mBAAmB,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,KAAK,KAAK,CAAvB,EAAuB,CAAC,CAAC;QACvF,IAAM,iBAAiB,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,KAAK,KAAK,CAAvB,EAAuB,CAAC,CAAC;AAErF,QAAA,iBAAiB,CAAC,OAAO,CAAC,UAAC,MAAM,EAAA;YAC/B,IAAI,MAAM,CAAC,OAAO,EAAE;gBAClB,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC9C,gBAAA,iBAAe,CAAC,IAAI,CAAA,KAAA,CAApB,iBAAe,EAAS,SAAS,CAAE,CAAA;AACpC,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,CAAC,MAAM,GAAG,UAAC,GAAG,EAAE,IAAI,EAAA;YACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAC;AACX,aAAA;AACH,SAAC,CAAC;QAEF,IAAI,mBAAmB,CAAC,MAAM,EAAE;AAC9B,YAAA,UAAU,CAAC,aAAa,GACnB,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,MAAM,EAAE,mBAAmB,EAC3B,QAAQ,EAAE,YAAY,CAAC,QAAQ,KAAK,UAAC,EAAE,EAAA,EAAK,OAAA,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAA3B,EAA2B,CAAC,EACxE,OAAO,EAAE;AACP,oBAAA,WAAW,EAAE;AACb,oBAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AACrC,oBAAA,OAAO,CACL,iBAAiB,CAAC,MAAM,CAAC,KAAK,sBAAsB;AAClD,0BAAE,EAAE;AACJ,0BAAE;4BACE,OAAO,EAAE,IAAI,KAAK,aAAa;4BAC/B,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC;AACpE,4BAAA,iBAAiB,EAAE,IAAI;yBACxB,CACN;AACD,oBAAA,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC;AAC7B,iBAAA,EAAA,CACF,CAAC;AACH,SAAA;QAED,IAAI,iBAAiB,CAAC,MAAM,EAAE;AAC5B,YAAA,UAAU,CAAC,WAAW,GACjB,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,MAAM,EAAE,iBAAiB,EACzB,QAAQ,EAAE,UAAC,EAAE,EAAA;AACX,oBAAA,IAAI,iBAAe,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK,EAAA,OAAA,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA,EAAA,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;iBACpE,EACD,OAAO,EAAE;AACP,oBAAA,WAAW,EAAE;AACb,oBAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AACrC,oBAAA,OAAO,CACL,iBAAiB,CAAC,MAAM,CAAC,KAAK,sBAAsB;AAClD,0BAAE,EAAE;2BACH,EAAA,GAAA;gCACG,OAAO,EAAE,IAAI,KAAK,aAAa;;AAC/B,4BAAA,EAAA,CAAC,sBAAsB,CAAG,GAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;4BAC9C,EAAW,CAAA,WAAA,GAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC;AACpE,4BAAA,EAAA,CAAA,iBAAiB,GAAE,IAAI;+BACxB,CACN;AACD,oBAAA,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC;oBAC5B,IAAI,KAAK,YAAY,GAAG,MAAM,EAAE,GAAG,IAAI;AACxC,iBAAA,EAAA,CACF,CAAC;AACH,SAAA;AACF,KAAA;AAED,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,IAAM,0BAA0B,GAAG,UACjC,OAAsB,EACtB,iBAAsC,EACtC,YAAoB,EACpB,YAAqB,EAAA;IAMrB,IAAM,UAAU,GAIZ,EAAE,CAAC;AAEP,IAAA,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;QAChF,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AACtD,KAAA;IAED,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnF,QAAA,IAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAsB,EAAK,EAAA,OAAA,CAAC,MAAM,CAAC,QAAQ,CAAhB,EAAgB,CAAC,CAAC;QAEzF,IAAM,iBAAe,GAAa,EAAE,CAAC;QAErC,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AACvC,YAAA,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;gBACtD,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AAChD,aAAA;AACD,YAAA,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;gBACxD,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;AAClD,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAC;QAEH,IAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,KAAK,KAAK,CAAvB,EAAuB,CAAC,CAAC;QAC/E,IAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,KAAK,KAAK,CAAvB,EAAuB,CAAC,CAAC;AAE7E,QAAA,SAAS,CAAC,OAAO,CAAC,UAAC,MAAM,EAAA;YACvB,IAAI,MAAM,CAAC,OAAO,EAAE;gBAClB,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC9C,gBAAA,iBAAe,CAAC,IAAI,CAAA,KAAA,CAApB,iBAAe,EAAS,SAAS,CAAE,CAAA;AACpC,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,CAAC,MAAM,GAAG,UAAC,GAAG,EAAE,IAAI,EAAA;YACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACjC,IAAI,CAAC,GAAG,CAAC,CAAC;AACX,aAAA;AACH,SAAC,CAAC;AAEF,QAAA,UAAU,CAAC,IAAI,GACV,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,MAAM,EAAE,WAAW,EACnB,QAAQ,EAAE,YAAY,CAAC,QAAQ,KAAK,UAAC,EAAE,EAAA,EAAK,OAAA,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAA3B,EAA2B,CAAC,EACxE,OAAO,EAAE;AACP,gBAAA,WAAW,EAAE;AACb,gBAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AACrC,gBAAA,OAAO,CACL,iBAAiB,CAAC,MAAM,CAAC,KAAK,sBAAsB;AAClD,sBAAE,EAAE;AACJ,sBAAE;AACE,wBAAA,OAAO,EAAE,wCAAwC;wBACjD,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC;AACpE,wBAAA,iBAAiB,EAAE,IAAI;qBACxB,CACN;AACD,gBAAA,QAAQ,CAAC,YAAY,EAAE,aAAa,EAAE,MAAM,CAAC;AAC9C,aAAA,EAAA,CACF,CAAC;QAEF,IAAI,WAAW,CAAC,MAAM,EAAE;AACtB,YAAA,UAAU,CAAC,WAAW,GACjB,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,MAAM,EAAE,WAAW,EACnB,QAAQ,EAAE,YAAY,CAAC,QAAQ,KAAK,UAAC,EAAE,EAAA,EAAK,OAAA,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAA3B,EAA2B,CAAC,EACxE,OAAO,EAAE;AACP,oBAAA,WAAW,EAAE;AACb,oBAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AACrC,oBAAA,OAAO,CACL,iBAAiB,CAAC,MAAM,CAAC,KAAK,sBAAsB;AAClD,0BAAE,EAAE;AACJ,0BAAE;AACE,4BAAA,OAAO,EAAE,wCAAwC;4BACjD,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC;AACpE,4BAAA,iBAAiB,EAAE,IAAI;yBACxB,CACN;AACD,oBAAA,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC;AACtC,iBAAA,EAAA,CACF,CAAC;AACH,SAAA;QAED,IAAI,SAAS,CAAC,MAAM,EAAE;AACpB,YAAA,UAAU,CAAC,SAAS,GACf,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,MAAM,EAAE,SAAS,EACjB,QAAQ,EAAE,UAAC,EAAE,EAAA;AACX,oBAAA,IAAI,iBAAe,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK,EAAA,OAAA,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA,EAAA,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;iBACpE,EACD,OAAO,EAAE;AACP,oBAAA,WAAW,EAAE;AACb,oBAAA,QAAQ,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AACrC,oBAAA,OAAO,CACL,iBAAiB,CAAC,MAAM,CAAC,KAAK,sBAAsB;AAClD,0BAAE,EAAE;AACJ,0BAAE;AACE,4BAAA,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;4BAC7B,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC;AACpE,4BAAA,iBAAiB,EAAE,IAAI;yBACxB,CACN;AACD,oBAAA,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC;AACtC,iBAAA,EAAA,CACF,CAAC;AACH,SAAA;AACF,KAAA;AAED,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAC1B,YAA2B,EAC3B,WAAmB,EACnB,iBAAsC,EACtC,YAAoB,EACpB,OAAgB,EAAA;AAEhB,IAAA,IAAM,KAAK,GAAW,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAEpD,IAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;AACvB,QAAA,MAAM,IAAI,KAAK,CAAC,4BAAoB,WAAW,EAAA,4BAAA,CAA2B,CAAC,CAAC;AAC7E,KAAA;AAED,IAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AACxB,QAAA,MAAM,IAAI,KAAK,CAAC,4BAAoB,WAAW,EAAA,6BAAA,CAA4B,CAAC,CAAC;AAC9E,KAAA;AAED,IAAA,IAAM,wBAAwB,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAK,EAAA,OAAA,4BAA4B,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,iBAAiB,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,EAAA,CAAC,CAAC;AAE5J,IAAA,IAAM,sBAAsB,GAAG,0BAA0B,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AAE7H,IAAA,IAAM,WAAW,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC;AAEhD,IAAA,IAAM,YAAY,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC;AAEjD,IAAA,IAAM,IAAI,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC;AAE5C,IAAA,IAAM,WAAW,GAAG,sBAAsB,CAAC,aAAa,CAAC,CAAC;AAE1D,IAAA,IAAM,YAAY,GAAG,sBAAsB,CAAC,WAAW,CAAC,CAAC;AAEzD,IAAA,IAAM,gBAAgB,GAAG,WAAW,CAAC,eAAe,CAAC,CAAC;AAEtD,IAAA,IAAM,cAAc,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;AAElD,IAAA,IAAM,iBAAiB,GAAG,YAAY,CAAC,eAAe,CAAC,CAAC;AAExD,IAAA,IAAM,eAAe,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;IAEpD,OAAO;AACL,QAAA,IAAI,EAAA,IAAA;AACJ,QAAA,WAAW,EAAA,WAAA;AACX,QAAA,YAAY,EAAA,YAAA;AACZ,QAAA,gBAAgB,EAAA,gBAAA;AAChB,QAAA,cAAc,EAAA,cAAA;AACd,QAAA,iBAAiB,EAAA,iBAAA;AACjB,QAAA,eAAe,EAAA,eAAA;KAChB,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,SAAS,CAAI,CAAK,EAAA;IACzB,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;AAC1B,CAAC;AAEM,IAAM,gBAAgB,GAAG,UAAO,OAAgB,EAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAC/C,gBAAA,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAEpC,gBAAA,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AAElC,gBAAA,YAAY,GAAG,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,WAAW,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;AAEtH,gBAAA,eAAe,GAAG,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AAExD,gBAAA,gBAAgB,GAAG,OAAO,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;AAErC,gBAAA,OAAA,CAAA,CAAA,YAAM,cAAc,CAAC,eAAe,CAAC,CAAA,CAAA;;AAA1D,gBAAA,kBAAkB,GAAG,EAAqC,CAAA,IAAA,EAAA,CAAA;AAEpC,gBAAA,OAAA,CAAA,CAAA,YAAM,cAAc,CAAC,gBAAgB,CAAC,CAAA,CAAA;;AAA5D,gBAAA,mBAAmB,GAAG,EAAsC,CAAA,IAAA,EAAA,CAAA;gBAElE,IAAI,CAAC,kBAAkB,EAAE;oBACvB,MAAM,IAAI,KAAK,CAAC,oBAAA,CAAA,MAAA,CAAoB,WAAW,EAA8B,8BAAA,CAAA,CAAA,MAAA,CAAA,eAAe,CAAE,CAAC,CAAC;AACjG,iBAAA;gBAED,IAAI,CAAC,mBAAmB,EAAE;oBACxB,MAAM,IAAI,KAAK,CAAC,oBAAA,CAAA,MAAA,CAAoB,WAAW,EAA+C,iDAAA,CAAA,CAAA,MAAA,CAAA,gBAAgB,CAAE,CAAC,CAAC;AACnH,iBAAA;gBAE0B,OAAM,CAAA,CAAA,YAAA,QAAQ,CAAC,eAAe,EAAE;AACzD,wBAAA,QAAQ,EAAE,OAAO;AAClB,qBAAA,CAAC,CAAA,CAAA;;AAFI,gBAAA,kBAAkB,GAAG,EAEzB,CAAA,IAAA,EAAA,CAAA;AAEI,gBAAA,iBAAiB,GAAG,SAAS,CAAC,kBAAkB,CAAC,CAAC;AAEpD,gBAAA,YAAY,GAAoB;iCAE7B,mBAAmB,CAAA;iBAEzB,CAAC;AAEF,gBAAA,IAAI,iBAAiB,CAAC,cAAc,CAAC,EAAE;AAC/B,oBAAA,iBAAiB,GAAG,iBAAiB,CAAC,cAAc,CAAoC,CAAC;AAC/F,oBAAA,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,iBAAiB,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC3F,iBAAA;gBAEK,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA,EAAK,OAAA,mBAAmB,CAAC,MAAM,EAAE,WAAW,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAA,EAAA,CAAC,CAAC;gBAE7H,OAAO,CAAA,CAAA,aAAA;AACL,wBAAA,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AAC9C,wBAAA,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,WAAW,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AAC5D,wBAAA,YAAY,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,YAAY,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AAC9D,wBAAA,gBAAgB,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,gBAAgB,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AACtE,wBAAA,cAAc,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,cAAc,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AAClE,wBAAA,iBAAiB,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,iBAAiB,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;AACxE,wBAAA,eAAe,EAAE,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,eAAe,GAAA,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;qBACrE,CAAC,CAAA;;;KACH;;ACvYD,IAAM,KAAK,GAAG,UAAO,WAAmB,EAAE,aAA4B,EAAE,IAAY,EAAE,IAAU,EAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAC9F,gBAAA,MAAM,EAAE,CAAC,IAAI,CAAC,+BAAgC,CAAA,MAAA,CAAA,WAAW,EAAW,UAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAc,aAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAU,UAAA,CAAA,CAAC,CAAC;gBAClG,MAAM,GAAuB,IAAI,CAAC;;;;gBAE5B,MAAM,GAAiB,aAAa,CAAA,MAA9B,EAAK,OAAO,UAAK,aAAa,EAAtC,CAAsB,QAAA,CAAA,CAAF,CAAmB;AACpC,gBAAA,OAAA,CAAA,CAAA,YAAM,MAAM,CAAC,OAAO,CAAC,CAAA,CAAA;;gBAA9B,MAAM,GAAG,SAAqB,CAAC;gBAC/B,OAAM,CAAA,CAAA,YAAA,OAAO,CAAC,GAAG,CAAE,MAA0B,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA,EAAK,OAAA,MAAM,aAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,KAAK,CAAC,MAAM,CAAC,CAArB,EAAqB,CAAC,CAAC,CAAA,CAAA;;AAArF,gBAAA,EAAA,CAAA,IAAA,EAAqF,CAAC;;;;AAEtF,gBAAA,MAAM,EAAE,CAAC,KAAK,CAAC,yBAAA,CAAA,MAAA,CAA0B,WAAW,EAAW,UAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAc,aAAA,CAAA,CAAA,MAAA,CAAA,IAAI,gCAAuB,GAAW,CAAC,OAAO,CAAE,CAAC,CAAC;AACnI,gBAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;oBAEhB,OAAM,CAAA,CAAA,aAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,KAAK,EAAE,EAAA,CAAA;;AAArB,gBAAA,EAAA,CAAA,IAAA,EAAqB,CAAC;;;AAExB,gBAAA,MAAM,EAAE,CAAC,IAAI,CAAC,yBAA0B,CAAA,MAAA,CAAA,WAAW,EAAW,UAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAc,aAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAkB,kBAAA,CAAA,CAAC,CAAC;;;;KACzG,CAAC;AAEK,IAAM,WAAW,GAAG,UAAO,OAAgB,EAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;gBAC1C,SAAS,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,WAAW,CAAC;;;;AAG6D,gBAAA,OAAA,CAAA,CAAA,YAAM,gBAAgB,CAAC,OAAO,CAAC,CAAA,CAAA;;gBAA3I,EAA4G,GAAA,EAAA,CAAA,IAAA,EAA+B,EAAzI,WAAW,GAAA,EAAA,CAAA,WAAA,EAAE,YAAY,GAAA,EAAA,CAAA,YAAA,EAAE,gBAAgB,GAAA,EAAA,CAAA,gBAAA,EAAE,cAAc,GAAA,EAAA,CAAA,cAAA,EAAE,iBAAiB,GAAA,EAAA,CAAA,iBAAA,EAAE,eAAe,GAAA,EAAA,CAAA,eAAA,EAAE,IAAI,GAAA,EAAA,CAAA,IAAA,CAAA;AAEvG,gBAAA,KAAA,GAAyB,EAAE,CAAC;AAElC,gBAAA,IAAI,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AACd,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAnC,EAAmC,CAAC,CAAC;AACtD,iBAAC,CAAC,CAAC;AAEH,gBAAA,WAAW,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AACrB,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAA3G,EAA2G,CAAC,CAAC;AAC9H,iBAAC,CAAC,CAAC;AAEH,gBAAA,YAAY,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AACtB,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAA3G,EAA2G,CAAC,CAAC;AAC9H,iBAAC,CAAC,CAAC;AAEH,gBAAA,gBAAgB,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AAC1B,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAA3G,EAA2G,CAAC,CAAC;AAC9H,iBAAC,CAAC,CAAC;AAEH,gBAAA,cAAc,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AACxB,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAA3G,EAA2G,CAAC,CAAC;AAC9H,iBAAC,CAAC,CAAC;AAEH,gBAAA,iBAAiB,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AAC3B,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAA1G,EAA0G,CAAC,CAAC;AAC7H,iBAAC,CAAC,CAAC;AAEH,gBAAA,eAAe,CAAC,GAAG,CAAC,UAAC,MAAM,EAAA;AACzB,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAG,CAAC,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAA1G,EAA0G,CAAC,CAAC;AAC7H,iBAAC,CAAC,CAAC;AAEH,gBAAA,OAAA,CAAA,CAAA,YAAM,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,EAAE,GAAA,CAAC,CAAC,CAAA,CAAA;;AAAtC,gBAAA,EAAA,CAAA,IAAA,EAAsC,CAAC;;;;AAEvC,gBAAA,MAAM,EAAE,CAAC,KAAK,CAAE,GAAW,KAAA,IAAA,IAAX,GAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAD,GAAC,CAAY,OAAO,CAAC,CAAC;AACtC,gBAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;;AC5EpB,IAAM,KAAK,GAAG,UAAC,WAAmB,EAAE,aAA4B,EAAE,IAAY,EAAE,IAAU,EAAA;IACxF,aAAa,CAAC,KAAK,GAAG;AACpB,QAAA,UAAU,EAAE,GAAG;KAChB,CAAC;AAEF,IAAA,IAAM,OAAO,GAAGA,OAAM,CAAC,aAAa,CAAC,CAAC;AAEtC,IAAA,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK,EAAA;AACxB,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,cAAc,EAAE;;AAGjC,YAAA,MAAM,EAAE,CAAC,IAAI,CAAC,+BAAgC,CAAA,MAAA,CAAA,WAAW,EAAW,UAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAc,aAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAU,UAAA,CAAA,CAAC,CAAC;AACvG,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,EAAE;YAC/B,IAAI,KAAK,CAAC,MAAM;AAAE,gBAAA,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAEvC,YAAA,MAAM,EAAE,CAAC,IAAI,CAAC,mBAAoB,CAAA,MAAA,CAAA,WAAW,EAAW,UAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAc,aAAA,CAAA,CAAA,MAAA,CAAA,IAAI,EAAwB,wBAAA,CAAA,CAAC,CAAC;AACzG,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;YAC1B,IAAI,KAAK,CAAC,MAAM;AAAE,gBAAA,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAEvC,YAAA,MAAM,EAAE,CAAC,KAAK,CAAC,mBAAoB,CAAA,MAAA,CAAA,WAAW,qBAAW,IAAI,EAAA,aAAA,CAAA,CAAA,MAAA,CAAc,IAAI,EAAA,2BAAA,CAAA,CAAA,MAAA,CAA4B,KAAK,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC,CAAC;AACjI,SAAA;AACH,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEK,IAAM,WAAW,GAAG,UAAO,OAAgB,EAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;gBAC1C,SAAS,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,WAAW,CAAC;;;;AAGK,gBAAA,OAAA,CAAA,CAAA,YAAM,gBAAgB,CAAC,OAAO,CAAC,CAAA,CAAA;;gBAAnF,EAAoD,GAAA,EAAA,CAAA,IAAA,EAA+B,EAAjF,WAAW,GAAA,EAAA,CAAA,WAAA,EAAE,gBAAgB,GAAA,EAAA,CAAA,gBAAA,EAAE,cAAc,GAAA,EAAA,CAAA,cAAA,CAAA;AAErD,gBAAA,WAAW,CAAC,OAAO,CAAC,UAAC,MAAM,EAAA;AACzB,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9G,iBAAC,CAAC,CAAC;AAEH,gBAAA,gBAAgB,CAAC,OAAO,CAAC,UAAC,MAAM,EAAA;AAC9B,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9G,iBAAC,CAAC,CAAC;AAEH,gBAAA,cAAc,CAAC,OAAO,CAAC,UAAC,MAAM,EAAA;AAC5B,oBAAA,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,oBAAA,IAAM,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;oBAC7D,OAAO,MAAM,CAAC,OAAO,CAAC;AACtB,oBAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,CAAE,MAAM,CAAC,MAA0B,CAAC,GAAG,CAAC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9G,iBAAC,CAAC,CAAC;;;;AAEH,gBAAA,MAAM,EAAE,CAAC,KAAK,CAAE,GAAW,KAAA,IAAA,IAAX,GAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAD,GAAC,CAAY,OAAO,CAAC,CAAC;AACtC,gBAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;;;;"}