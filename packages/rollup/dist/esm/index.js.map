{"version":3,"file":"index.js","sources":["../../src/log.ts","../../src/safeParse.ts","../../src/rollupConfig.ts","../../src/rollupBuild.ts","../../src/rollupWatch.ts"],"sourcesContent":["import { pino } from \"pino\";\nimport pretty from \"pino-pretty\";\n\nexport const logger = () => pino(pretty());","export const safeParse = (str: string) => {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    throw new Error(`parse error, ${(e as Error).message}`);\n  }\n};\n","import commonjs from \"@rollup/plugin-commonjs\";\nimport { nodeResolve } from \"@rollup/plugin-node-resolve\";\nimport replace from \"@rollup/plugin-replace\";\nimport fs from \"fs\";\nimport { readFile, access } from \"fs/promises\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { resolve } from \"path\";\nimport typescript from \"rollup-plugin-typescript2\";\n\nimport { safeParse } from \"./safeParse\";\n\nimport type { Mode, MultipleOutput } from \"./type\";\nimport type { RollupOptions } from \"rollup\";\n\nconst defaultBuildOptions: RollupOptions = {\n  input: \"./src/index.ts\",\n  output: [\n    {\n      dir: \"./dist\",\n      entryFileNames: \"cjs/index.js\",\n      format: \"cjs\",\n      sourcemap: true,\n    },\n    {\n      dir: \"./dist\",\n      entryFileNames: \"esm/index.js\",\n      format: \"esm\",\n      sourcemap: true,\n    },\n  ],\n};\n\nconst checkFileExist = (path: string) => {\n  return access(path, fs.constants.F_OK)\n    .then(() => true)\n    .catch(() => false);\n};\n\nconst tsConfig = (absolutePath: string, mode: Mode) => {\n  return typescript({\n    clean: true,\n    tsconfig: resolve(absolutePath, \"tsconfig.json\"),\n    useTsconfigDeclarationDir: true,\n    tsconfigOverride: {\n      compilerOptions: {\n        composite: mode === \"development\" ? true : false,\n        sourceMap: mode === \"development\" ? true : false,\n        declaration: mode === \"development\" ? true : false,\n        declarationMap: mode === \"development\" ? true : false,\n        declarationDir: mode === \"development\" ? \"dist/types\" : null,\n      },\n    },\n  });\n};\n\nconst transformBuildOptions = (\n  options: RollupOptions,\n  packageFileObject: Record<string, any>,\n  absolutePath: string,\n  mode: Mode\n): {\n  singleOther?: RollupOptions;\n  singleUMD?: RollupOptions;\n  multipleOther?: RollupOptions;\n  multipleUMD?: RollupOptions;\n} => {\n  const allOptions: {\n    singleOther?: RollupOptions;\n    singleUMD?: RollupOptions;\n    multipleOther?: RollupOptions;\n    multipleUMD?: RollupOptions;\n  } = {};\n  if (typeof options.input === \"string\" && !options.input.startsWith(absolutePath)) {\n    options.input = resolve(absolutePath, options.input);\n  }\n  if (options.output) {\n    options.output = Array.isArray(options.output) ? options.output : [options.output];\n    const singleConfig = options.output.filter((output: MultipleOutput) => !output.multiple);\n    const singleOtherConfig = singleConfig.filter((output) => output.format !== \"umd\");\n    const singleUMDConfig = singleConfig.filter((output) => output.format === \"umd\");\n    const multipleConfig = options.output.filter((output: MultipleOutput) => output.multiple);\n    const multipleOtherConfig = multipleConfig.filter((output) => output.format !== \"umd\");\n    const multipleUMDConfig = multipleConfig.filter((output) => output.format === \"umd\");\n\n    const umdGlobalIgnore: string[] = [];\n\n    options.output = options.output.map((output: MultipleOutput) => {\n      if (output.dir && !output.dir.startsWith(absolutePath)) {\n        output.dir = resolve(absolutePath, output.dir);\n        if (output.multiple) {\n          const typedEntryFileNames = output.entryFileNames as string;\n          const lastIndexofDote = typedEntryFileNames.lastIndexOf(\".\");\n          output.entryFileNames = `${typedEntryFileNames.slice(0, lastIndexofDote)}.${mode}${typedEntryFileNames.slice(lastIndexofDote)}`;\n          delete output.multiple;\n        }\n      }\n      if (output.file && !output.file.startsWith(absolutePath)) {\n        output.file = resolve(absolutePath, output.file);\n        if (output.multiple) {\n          const typedEntryFileNames = output.file as string;\n          const lastIndexofDote = typedEntryFileNames.lastIndexOf(\".\");\n          output.file = `${typedEntryFileNames.slice(0, lastIndexofDote)}.${mode}${typedEntryFileNames.slice(lastIndexofDote)}`;\n          delete output.multiple;\n        }\n      }\n      if (output.globals) {\n        const allGlobal = Object.keys(output.globals);\n        umdGlobalIgnore.push(...allGlobal);\n      }\n      return output;\n    });\n\n    options.onwarn = (msg, warn) => {\n      if (!/Circular/.test(msg.message)) {\n        warn(msg);\n      }\n    };\n\n    if (singleOtherConfig.length) {\n      allOptions.singleOther = {\n        ...options,\n        output: singleOtherConfig,\n        external: (id) => id.includes(\"node_modules\"),\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                __DEV__: 'process.env.NODE_ENV === \"development\"',\n                __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                preventAssignment: true,\n              }\n          ),\n          tsConfig(absolutePath, mode),\n        ],\n      };\n    }\n\n    if (singleUMDConfig.length) {\n      allOptions.singleUMD = {\n        ...options,\n        output: singleUMDConfig,\n        external: (id) => {\n          if (umdGlobalIgnore.some((name) => id.endsWith(name))) return true;\n        },\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                __DEV__: 'process.env.NODE_ENV === \"development\"',\n                __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                preventAssignment: true,\n              }\n          ),\n          tsConfig(absolutePath, mode),\n        ],\n      };\n    }\n\n    if (multipleOtherConfig.length) {\n      allOptions.multipleOther = {\n        ...options,\n        output: multipleOtherConfig,\n        external: (id) => id.includes(\"node_modules\"),\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                __DEV__: 'process.env.NODE_ENV === \"development\"',\n                __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                preventAssignment: true,\n              }\n          ),\n          tsConfig(absolutePath, mode),\n          // mode === \"production\" ? terser() : null,\n        ],\n      };\n    }\n\n    if (multipleUMDConfig.length) {\n      allOptions.multipleUMD = {\n        ...options,\n        output: multipleUMDConfig,\n        external: (id) => {\n          if (umdGlobalIgnore.some((name) => id.endsWith(name))) return true;\n        },\n        plugins: [\n          nodeResolve(),\n          commonjs({ exclude: \"node_modules\" }),\n          replace(\n            packageFileObject[\"name\"] === \"@project-tool/rollup\"\n              ? {}\n              : {\n                __DEV__: 'process.env.NODE_ENV === \"development\"',\n                __VERSION__: JSON.stringify(packageFileObject[\"version\"] || \"0.0.1\"),\n                preventAssignment: true,\n              }\n          ),\n          tsConfig(absolutePath, mode),\n        ],\n      };\n    }\n  }\n\n  return allOptions;\n};\n\nconst flattenRollupConfig = (rollupConfig: RollupOptions, packageName: string, packageFileObject: Record<string, any>, absolutePath: string) => {\n  const modes: Mode[] = [\"development\", \"production\"];\n\n  if (!rollupConfig.input) {\n    throw new Error(`current package \"${packageName}\" not have a input config`);\n  }\n\n  if (!rollupConfig.output) {\n    throw new Error(`current package \"${packageName}\" not have a output config`);\n  }\n\n  const allRollupOptions = modes.map((mode) => transformBuildOptions(cloneDeep(rollupConfig), packageFileObject, absolutePath, mode));\n\n  const allDevBuild = allRollupOptions[0];\n\n  const allProdBuild = allRollupOptions[1];\n\n  // single build bundle base on current process env, so only need build once\n  const singleOther = allDevBuild[\"singleOther\"];\n\n  const singleDevUMD = allDevBuild[\"singleUMD\"];\n\n  const multipleDevOther = allDevBuild[\"multipleOther\"];\n\n  const multipleDevUMD = allDevBuild[\"multipleUMD\"];\n\n  const multipleProdOther = allProdBuild[\"multipleOther\"];\n\n  const multipleProdUMD = allProdBuild[\"multipleUMD\"];\n\n  return {\n    singleOther,\n    singleDevUMD,\n    multipleDevOther,\n    multipleDevUMD,\n    multipleProdOther,\n    multipleProdUMD,\n  };\n};\n\nfunction filterFun<T>(t?: T): t is T {\n  return t ? true : false;\n}\n\nexport const getRollupConfigs = async (packageName: string, packageScope?: string) => {\n  const absolutePath = packageScope ? resolve(process.cwd(), packageScope, packageName) : resolve(process.cwd(), packageName);\n\n  const packageFilePath = resolve(absolutePath, \"package.json\");\n\n  const tsconfigFilePath = resolve(absolutePath, \"tsconfig.json\");\n\n  const isPackageFileExist = await checkFileExist(packageFilePath);\n\n  const isTsconfigFileExist = await checkFileExist(tsconfigFilePath);\n\n  if (!isPackageFileExist) {\n    throw new Error(`current package \"${packageName}\" not exist, absolutePath: ${packageFilePath}`);\n  }\n\n  if (!isTsconfigFileExist) {\n    throw new Error(`current package \"${packageName}\" not have a \"tsconfig.json\", absolutePath: ${tsconfigFilePath}`);\n  }\n\n  const packageFileContent = await readFile(packageFilePath, {\n    encoding: \"utf-8\",\n  });\n\n  const packageFileObject = safeParse(packageFileContent);\n\n  let rollupConfig: RollupOptions[] = [\n    {\n      ...defaultBuildOptions,\n    },\n  ];\n\n  if (packageFileObject[\"buildOptions\"]) {\n    const typedBuildOptions = packageFileObject[\"buildOptions\"] as RollupOptions | RollupOptions[];\n    rollupConfig = Array.isArray(typedBuildOptions) ? typedBuildOptions : [typedBuildOptions];\n  }\n\n  const all = rollupConfig.map((config) => flattenRollupConfig(config, packageName, packageFileObject, absolutePath));\n\n  return {\n    singleOther: all.map((i) => i.singleOther).filter(filterFun),\n    singleDevUMD: all.map((i) => i.singleDevUMD).filter(filterFun),\n    multipleDevOther: all.map((i) => i.multipleDevOther).filter(filterFun),\n    multipleDevUMD: all.map((i) => i.multipleDevUMD).filter(filterFun),\n    multipleProdOther: all.map((i) => i.multipleProdOther).filter(filterFun),\n    multipleProdUMD: all.map((i) => i.multipleProdUMD).filter(filterFun),\n  };\n};\n","import { rollup } from \"rollup\";\n\nimport { logger } from \"./log\";\nimport { getRollupConfigs } from \"./rollupConfig\";\n\nimport type { Packages, Type } from \"./type\";\nimport type { OutputOptions, RollupOptions, RollupBuild } from \"rollup\";\n\nconst build = async (packageName: string, rollupOptions: RollupOptions, mode: string, type: Type) => {\n  logger().info(`[build] start build package '${packageName}' with '${mode}' mode in '${type}' format`)\n  let bundle: RollupBuild | null = null;\n  try {\n    const { output, ...options } = rollupOptions;\n    bundle = await rollup(options);\n    await Promise.all((output as OutputOptions[]).map((output) => bundle?.write(output)));\n  } catch (e) {\n    logger().error(`[build] build package '${packageName}' with '${mode}' mode in '${type}' format failed \\n ${(e as Error).message}`)\n    process.exit(1)\n  } finally {\n    await bundle?.close();\n  }\n  logger().info(`[build] build package '${packageName}' with '${mode}' mode in '${type}' format success`)\n};\n\nexport async function rollupBuild(_packageName: { name: Packages; alias: string }, packageScope?: string): Promise<void>;\nexport async function rollupBuild(_packageName: Packages, packageScope?: string): Promise<void>;\nexport async function rollupBuild(_packageName: Packages | { name: Packages; alias: string }, packageScope?: string) {\n  const packageName = typeof _packageName === \"string\" ? _packageName : _packageName.name;\n\n  const aliasName = typeof _packageName === \"string\" ? _packageName : _packageName.alias;\n\n  const { singleOther, singleDevUMD, multipleDevOther, multipleDevUMD, multipleProdOther, multipleProdUMD } = await getRollupConfigs(packageName, packageScope);\n\n  const all: Array<() => void> = [];\n\n  singleOther.map((config) => all.push(() => build(aliasName, config, \"process.env\", \"cjs/esm\")));\n\n  singleDevUMD.map((config) => all.push(() => build(aliasName, config, \"development\", \"umd\")));\n\n  multipleDevOther.map((config) => all.push(() => build(aliasName, config, \"development\", \"cjs&esm\")));\n\n  multipleDevUMD.map((config) => all.push(() => build(aliasName, config, \"development\", \"umd\")));\n\n  multipleProdOther.map((config) => all.push(() => build(aliasName, config, \"production\", \"cjs&esm\")));\n\n  multipleProdUMD.map((config) => all.push(() => build(aliasName, config, \"production\", \"umd\")));\n\n  await Promise.all(all.map((f) => f()));\n}\n","import { watch as rollup } from \"rollup\";\n\nimport { logger } from \"./log\";\nimport { getRollupConfigs } from \"./rollupConfig\";\n\nimport type { Type, Packages } from \"./type\";\nimport type { RollupOptions } from \"rollup\";\n\nconst watch = (packageName: string, rollupOptions: RollupOptions, mode: string, type: Type) => {\n  rollupOptions.watch = {\n    buildDelay: 100,\n  };\n\n  const watcher = rollup(rollupOptions);\n\n  watcher.on(\"event\", (event) => {\n    if (event.code === \"BUNDLE_START\") {\n      // look like rollup watch have a bug for some usage\n\n      logger().info(`[watch] start build package '${packageName}' with '${mode}' mode in '${type}' format`);\n    }\n    if (event.code === \"BUNDLE_END\") {\n      if (event.result) event.result.close();\n\n      logger().info(`[watch] package '${packageName}' with '${mode}' mode in '${type}' format build success`);\n    }\n    if (event.code === \"ERROR\") {\n      if (event.result) event.result.close();\n\n      logger().error(`[watch] package '${packageName}' with '${mode}' mode in '${type}' format build failed \\n ${event.error.stack}`);\n    }\n  });\n};\n\nexport async function rollupWatch(_packageName: Packages): Promise<void>;\nexport async function rollupWatch(_packageName: { name: Packages; alias: string }): Promise<void>;\nexport async function rollupWatch(_packageName: Packages | { name: Packages; alias: string }) {\n  const packageName = typeof _packageName === \"string\" ? _packageName : _packageName.name;\n\n  const aliasName = typeof _packageName === \"string\" ? _packageName : _packageName.alias;\n\n  const { singleOther, multipleDevOther, multipleDevUMD } = await getRollupConfigs(packageName);\n\n  singleOther.forEach((config) => watch(aliasName, config, \"process.env\", \"cjs/esm\"));\n\n  multipleDevOther.forEach((config) => watch(aliasName, config, \"development\", \"cjs&esm\"));\n\n  multipleDevUMD.forEach((config) => watch(aliasName, config, \"development\", \"umd\"));\n}\n"],"names":["rollup"],"mappings":"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"}